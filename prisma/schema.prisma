generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL") // ðŸ‘ˆ required for migrations
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  documents Document[]
  chats     Chat[]
  messages  Message[] // ðŸ‘ˆ Add this relation

  @@map("users")
}

model Document {
  id           String   @id @default(cuid())
  filename     String
  originalName String
  fileSize     Int
  mimeType     String
  uploadPath   String
  extractedText String? @db.Text  // ðŸ‘ˆ NEW: Store PDF text content
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  chats Chat[]

  @@map("documents")
}

model Chat {
  id        String   @id @default(cuid())
  title     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId     String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  documentId String
  document   Document @relation(fields: [documentId], references: [id], onDelete: Cascade)

  messages Message[]

  @@map("chats")
}

model Message {
  id        String   @id @default(cuid())
  content   String
  role      String
  createdAt DateTime @default(now())

  pageNumber  Int?
  annotations Json?

  chatId String
  chat   Chat   @relation(fields: [chatId], references: [id], onDelete: Cascade)

  // ðŸ‘‡ Add this
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("messages")
}